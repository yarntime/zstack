<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:zstack="http://zstack.org/schema/zstack"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://zstack.org/schema/zstack 
    http://zstack.org/schema/zstack/plugin.xsd"
    default-init-method="init" default-destroy-method="destroy">

    <bean id="VirtualRouterApiInterceptor" class="org.zstack.network.service.virtualrouter.VirtualRouterApiInterceptor">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.apimediator.ApiMessageInterceptor" />
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterApplianceVmFactory" class="org.zstack.network.service.virtualrouter.VirtualRouterApplianceVmFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.appliancevm.ApplianceVmSubTypeFactory" />
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterManager" class="org.zstack.network.service.virtualrouter.VirtualRouterManagerImpl">
        <property name="virtualRouterPostCreateFlows">
            <list>
                <value>org.zstack.network.service.virtualrouter.lifecycle.VirtualRouterAssembleDecoratorFlow</value>
                <value>org.zstack.network.service.virtualrouter.lifecycle.VirtualRouterDeployAgentFlow</value>
                <value>org.zstack.network.service.virtualrouter.dns.VirtualRouterSyncDnsOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.dhcp.VirtualRouterSyncDHCPOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.nat.VirtualRouterSyncSNATOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.vip.VirtualRouterSyncVipFlow</value>
                <value>org.zstack.network.service.virtualrouter.portforwarding.VirtualRouterSyncPortForwardingRulesOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.eip.VirtualRouterSyncEipOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.lb.VirtualRouterSyncLbOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.lifecycle.TrackVirtualRouterVmFlow</value>
            </list>
        </property>

        <property name="virtualRouterPostStartFlows">
            <list>
                <value>org.zstack.network.service.virtualrouter.lifecycle.VirtualRouterAssembleDecoratorFlow</value>
                <value>org.zstack.network.service.virtualrouter.lifecycle.VirtualRouterDeployAgentFlow</value>
                <value>org.zstack.network.service.virtualrouter.dns.VirtualRouterSyncDnsOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.dhcp.VirtualRouterSyncDHCPOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.nat.VirtualRouterSyncSNATOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.vip.VirtualRouterSyncVipFlow</value>
                <value>org.zstack.network.service.virtualrouter.portforwarding.VirtualRouterSyncPortForwardingRulesOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.eip.VirtualRouterSyncEipOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.lb.VirtualRouterSyncLbOnStartFlow</value>
            </list>
        </property>

        <property name="virtualRouterPostRebootFlows">
            <list>
                <value>org.zstack.network.service.virtualrouter.lifecycle.VirtualRouterAssembleDecoratorFlow</value>
                <value>org.zstack.network.service.virtualrouter.lifecycle.VirtualRouterDeployAgentFlow</value>
                <value>org.zstack.network.service.virtualrouter.dns.VirtualRouterSyncDnsOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.dhcp.VirtualRouterSyncDHCPOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.nat.VirtualRouterSyncSNATOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.vip.VirtualRouterSyncVipFlow</value>
                <value>org.zstack.network.service.virtualrouter.portforwarding.VirtualRouterSyncPortForwardingRulesOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.eip.VirtualRouterSyncEipOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.lb.VirtualRouterSyncLbOnStartFlow</value>
            </list>
        </property>

        <property name="virtualRouterPostDestroyFlows">
            <list>
                <value>org.zstack.network.service.virtualrouter.lifecycle.VirtualRouterAssembleDecoratorFlow</value>
                <value>org.zstack.network.service.virtualrouter.eip.VirtualRouterCleanupEipOnDestroyFlow</value>
                <value>org.zstack.network.service.virtualrouter.portforwarding.VirtualRouterCleanupPortforwardingOnDestroyFlow</value>
                <value>org.zstack.network.service.virtualrouter.vip.VirtualRouterCleanupVipOnDestroyFlow</value>
                <value>org.zstack.network.service.virtualrouter.lifecycle.UntrackVirtualRouterVmFlow</value>
            </list>
        </property>

        <property name="virtualRouterReconnectFlows">
            <list>
                <value>org.zstack.appliancevm.ApplianceVmDeployAgentFlow</value>
                <value>org.zstack.appliancevm.ApplianceVmSetFirewallFlow</value>
                <value>org.zstack.network.service.virtualrouter.lifecycle.VirtualRouterDeployAgentFlow</value>
                <value>org.zstack.network.service.virtualrouter.dns.VirtualRouterSyncDnsOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.dhcp.VirtualRouterSyncDHCPOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.nat.VirtualRouterSyncSNATOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.vip.VirtualRouterSyncVipFlow</value>
                <value>org.zstack.network.service.virtualrouter.portforwarding.VirtualRouterSyncPortForwardingRulesOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.eip.VirtualRouterSyncEipOnStartFlow</value>
                <value>org.zstack.network.service.virtualrouter.lb.VirtualRouterSyncLbOnStartFlow</value>
            </list>
        </property>

        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component" />
            <zstack:extension interface="org.zstack.header.Service" />
            <zstack:extension interface="org.zstack.header.managementnode.PrepareDbInitialValueExtensionPoint" />
            <zstack:extension interface="org.zstack.header.network.l2.L2NetworkCreateExtensionPoint" />
            <zstack:extension interface="org.zstack.header.apimediator.GlobalApiMessageInterceptor" />
            <zstack:extension interface="org.zstack.header.query.AddExpandedQueryExtensionPoint" />
            <zstack:extension interface="org.zstack.network.service.eip.GetCandidateVmNicsForEipInVirtualRouterExtensionPoint" />
            <zstack:extension interface="org.zstack.network.service.lb.GetCandidateVmNicsForLoadBalancerExtensionPoint"/>
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterPingTracker" class="org.zstack.network.service.virtualrouter.VirtualRouterPingTracker">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component" />
            <zstack:extension interface="org.zstack.header.managementnode.ManagementNodeChangeListener" />
            <zstack:extension interface="org.zstack.header.managementnode.ManagementNodeReadyExtensionPoint" />
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterProviderFactory" class="org.zstack.network.service.virtualrouter.VirtualRouterProviderFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.network.service.NetworkServiceProviderFactory" />
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterOfferingFactory" class="org.zstack.network.service.virtualrouter.VirtualRouterOfferingFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.configuration.InstanceOfferingFactory"/>
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterKvmBackend" class="org.zstack.network.service.virtualrouter.VirtualRouterKvmBackend">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.network.service.virtualrouter.VirtualRouterHypervisorBackend"/>
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterVipBackend" class="org.zstack.network.service.virtualrouter.vip.VirtualRouterVipBackend">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.network.service.vip.VipBackend" />
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterDhcpBackend" class="org.zstack.network.service.virtualrouter.dhcp.VirtualRouterDhcpBackend">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.network.service.NetworkServiceDhcpBackend" />
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterSnatBackend" class="org.zstack.network.service.virtualrouter.nat.VirtualRouterSnatBackend">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.network.service.NetworkServiceSnatBackend" />
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterDnsBackend" class="org.zstack.network.service.virtualrouter.dns.VirtualRouterDnsBackend">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.network.service.NetworkServiceDnsBackend" />
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterEipBackend" class="org.zstack.network.service.virtualrouter.eip.VirtualRouterEipBackend">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.network.service.eip.EipBackend" />
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterOfferingCascadeExtension" class="org.zstack.network.service.virtualrouter.VirtualRouterOfferingCascadeExtension">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.core.cascade.CascadeExtensionPoint" />
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterPortForwardingBackend" class="org.zstack.network.service.virtualrouter.portforwarding.VirtualRouterPortForwardingBackend">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.header.Component" />
            <zstack:extension interface="org.zstack.network.service.portforwarding.PortForwardingBackend"/>
        </zstack:plugin>

        <property name="applyPortForwardingRuleElements">
            <list>
                <value>org.zstack.network.service.virtualrouter.portforwarding.PortForwardingOpenVirtualRouterFirewallFlow</value>
                <value>org.zstack.network.service.virtualrouter.portforwarding.ApplyPortforwardingRuleOnVirtualRouterVmFlow</value>
            </list>
        </property>

        <property name="releasePortForwardingRuleElements">
            <list>
                <value>org.zstack.network.service.virtualrouter.portforwarding.ReleasePortForwardingRuleOnVirtualRouterVmFlow</value>
                <value>org.zstack.network.service.virtualrouter.portforwarding.PortForwardingRemoveVirtualRouterFirewallFlow</value>
            </list>
        </property>
    </bean>

    <bean id="VirtualRouterLoadBalancerBackend" class="org.zstack.network.service.virtualrouter.lb.VirtualRouterLoadBalancerBackend">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.network.service.lb.LoadBalancerBackend" />
        </zstack:plugin>
    </bean>

    <bean id="VirtualRouterVipFactory" class="org.zstack.network.service.virtualrouter.vip.VirtualRouterVipFactory">
        <zstack:plugin>
            <zstack:extension interface="org.zstack.network.service.vip.VipFactory" />
        </zstack:plugin>
    </bean>
</beans>
